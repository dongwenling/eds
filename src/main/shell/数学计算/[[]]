当 [[ ]] 判断 expression 成立时，退出状态为 0，否则为非 0 值。注意[[ ]]和expression之间的空格，这两个空格是必须的，否则会导致语法错误。
[[ ]] 是 Shell 内置关键字，不是命令，在使用时没有给函数传递参数的过程，所以 test 命令的某些注意事项在 [[ ]] 中就不存在了，具体包括：
不需要把变量名用双引号""包围起来，即使变量是空值，也不会出错。
不需要、也不能对 >、< 进行转义，转义后会出错。
#!/bin/bash

read str1
read str2

if [[ -z $str1 ]] || [[ -z $str2 ]]  #不需要对变量名加双引号
then
    echo "字符串不能为空"
elif [[ $str1 < $str2 ]]  #不需要也不能对 < 进行转义
then
    echo "str1 < str2"
else
    echo "str1 >= str2"
fi

注意，[[ ]] 剔除了 test 命令的-o和-a选项，你只能使用 || 和 &&。这意味着，你不能写成下面的形式：



[ -z "$str1" ] || [ -z "$str2" ]	√	[[ -z $str1 ]] || [[ -z $str2 ]]	√
[ -z "$str1" -o -z "$str2" ]	√	[[ -z $str1 -o -z $str2 ]]	×


数字与运算符直接应该有空格
 if [[ 1 < 2 && 2 < 3 ]];then echo "对";fi